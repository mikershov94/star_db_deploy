{"version":3,"sources":["components/Header/index.js","components/Header/Header.jsx","services/swapi-service.js","components/RandomPlanet/DataPlanet.jsx","components/Spinner/index.js","components/Spinner/Spinner.jsx","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.jsx","components/RandomPlanet/index.js","components/RandomPlanet/RandomPlanet.jsx","components/Row/index.js","components/Row/Row.jsx","components/ItemList/ItemList.jsx","components/ItemList/index.js","components/HocHelpers/WithData.jsx","components/SwapiServiceContext/SwapiServiceContext.jsx","components/HocHelpers/WithSwapiService.jsx","components/HocHelpers/WithChildFunction.jsx","components/HocHelpers/Compose.js","components/SwComponents/Lists.jsx","components/ErrorButton/index.js","components/ErrorButton/ErrorButton.jsx","components/ItemDetails/index.js","components/ItemDetails/ItemDetails.jsx","components/Record/index.js","components/Record/Record.jsx","components/SwComponents/PersonDetails.jsx","components/SwComponents/PlanetDetails.jsx","components/SwComponents/StarshipDetails.jsx","components/Pages/PeoplePage.jsx","components/Pages/PlanetPage.jsx","components/Pages/StarshipPage.jsx","components/Pages/LoginPage.jsx","components/Pages/SecretPage.jsx","components/Pages/MainPage.jsx","services/moc-service.js","App/index.js","App/App.jsx","index.js"],"names":["Header","onChangeService","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","SwapiService","_transformPlanet","planet","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","getAllPeople","a","getReource","res","results","map","getPerson","getImagePerson","_imageBase","getAllPlanets","getPlanet","getImagePlanet","getAllStarships","getStarship","getImageStarship","this","_apiBase","url","fetch","ok","Error","status","json","item","match","DataPlanet","props","Fragment","src","alt","Spinner","ErrorIndicator","RandomPlanet","state","loading","error","swapiService","onPlanetLoaded","setState","onError","updatePlanet","Math","floor","random","then","catch","interval","setInterval","clearInterval","hasData","errorMessage","spinner","content","React","Component","Row","left","right","ItemList","data","onItemClick","renderName","children","items","label","activeItem","itemSelected","key","defaultProps","withData","View","errors","err","getData","update","prevProps","createContext","SwapiProvider","Provider","SwapiConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","swapi","serviceProps","withChildFunction","fn","compose","funcs","comp","reduceRight","prevResult","f","PersonList","PlanetList","StarshipList","ErrorButton","dataError","throwError","foo","bar","ItemDetails","image","updateItem","itemId","getImageUrl","height","Children","child","index","cloneElement","Record","field","withRouter","history","params","push","PlanetPage","LoginPage","isLoggedIn","onLogin","SecretPage","MainPage","MocService","_people","_planets","_starships","App","isTestedData","Service","isRandomWidgetView","RandomWidget","value","path","exact","component","PeoplePage","StarshipPage","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fb622e65.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Header.sass'\n\nconst Header = ({ onChangeService }) => {\n\treturn(\n\t\t<nav className='navbar navbar-expand-lg navbar-light bg-light'>\n\t\t  <Link className=\"navbar-brand\" to=\"/\">Star DB</Link>\n\t\t  <button className=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\" aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t\t    <span className=\"navbar-toggler-icon\"></span>\n\t\t  </button>\n\n\t\t\t<div className=\"navbar-collapse collapse\" id=\"navbarColor03\">\n\t\t    <ul className=\"navbar-nav mr-auto\">\n\t\t      <li className=\"nav-item\">\n\t\t\t    <Link className=\"nav-link\" to=\"/people/\">Персонажи </Link>\n\t\t      </li>\n\t\t      <li className=\"nav-item\">\n\t\t        <Link className=\"nav-link\" to=\"/planets/\">Планеты</Link>\n\t\t      </li>\n\t\t      <li className=\"nav-item\">\n\t\t        <Link className=\"nav-link\" to=\"/starships/\">Корабли</Link>\n\t\t      </li>\n\t\t      <li className=\"nav-item\">\n\t\t        <Link className=\"nav-link\" to=\"/login\">Вход</Link>\n\t\t      </li>\n\t\t      <li className=\"nav-item\">\n\t\t        <Link className=\"nav-link\" to=\"/secret\">Секрет</Link>\n\t\t      </li>\n\t\t    </ul>\n\n\t\t    <button className=\"btn btn-primary\"\n\t\t    \t\t\t\tonClick={onChangeService}>\n\t\t    \tПоменять сервис\n\t\t    </button>\n\n\t\t  </div>\n\t\t</nav>\n\t);\n};\n\nexport default Header;","class SwapiService {\n\tconstructor() {\n\t\tthis._apiBase = 'https://swapi.dev/api';\n\t\tthis._imageBase = 'https://starwars-visualguide.com/assets/img/'\n\t}\n\n\tasync getReource(url) {\n\t\tconst res = await fetch(`${this._apiBase}${url}`);\n\n\t\tif (!res.ok) {\n\t\t\tthrow new Error(`Could not fetch ${url}`+\n\t\t\t\t` received ${res.status}`);\n\t\t}\n\n\t\treturn await res.json();\n\t}\n\n\t_extractId(item) {\t\t\t\t\t\t//получаем ID сущности\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\t//регулярным выражением достаем из URL\n\n\t\treturn item.url.match(idRegExp)[1]; //возвращаем id из URL, который хранится в props\n\t}\n\n\t_transformPlanet = (planet) => {\t\t//принимаем объект planet и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(planet),\n\t\t\tname: planet.name,\n\t\t\tpopulation: planet.population,\n\t\t\trotationPeriod: planet.rotation_period,\n\t\t\tdiameter: planet.diameter,\n\t\t};\n\t}\n\n\t_transformStarship = (starship) => {\t//принимаем объект starship и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(starship),\n\t\t\tname: starship.name,\n\t\t\tmodel: starship.model,\n\t\t\tmanufacturer: starship.manufacturer,\n\t\t\tcostInCredits: starship.costInCredits,\n\t\t\tlength: starship.length,\n\t\t\tcrew: starship.crew,\n\t\t\tpassengers: starship.passengers,\n\t\t\tcargoCapacity: starship.cargoCapacity,\n\t\t};\n\t}\n\n\t_transformPerson = (person) => {\t//принимаем объект person и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(person),\n\t\t\tname: person.name,\n\t\t\tgender: person.gender,\n\t\t\tbirthYear: person.birth_year,\n\t\t\teyeColor: person.eye_color,\n\t\t};\n\t}\n\n\tgetAllPeople = async () => {\n\t\tconst res = await this.getReource('/people/');\t//асинхронно обращаемся к API\n\t\treturn res.results.map(this._transformPerson);\t//для каждого полученного объекта применяем трансформацию\n\t}\n\n\tgetPerson = async (id) => {\n\t\tconst person = await this.getReource(`/people/${id}`);\t//асинхронно обращаемся к API\n\n\t\treturn this._transformPerson(person);\t\t//возвращаем полученный объект трансформированным\n\t}\n\n\tgetImagePerson = ({ id }) => {\n\t\treturn `${this._imageBase}characters/${id}.jpg`\n\t}\n\n\tgetAllPlanets = async () => {\n\t\tconst res = await this.getReource('/planets/');\t//асинхронно обращаемся к API\n\t\treturn res.results.map(this._transformPlanet);\t//для каждого полученного объекта применяем трансформацию\n\t}\n\n\tgetPlanet = async (id) => {\n\t\tconst planet = await this.getReource(`/planets/${id}`);\t//асинхронно обращаемся к API\n\n\t\treturn this._transformPlanet(planet);\t//возвращаем полученный объект трансформированным\n\t}\n\n\tgetImagePlanet = ({ id }) => {\n\t\treturn `${this._imageBase}planets/${id}.jpg`\n\t}\n\n\tgetAllStarships = async () => {\n\t\tconst res = await this.getReource('/starships/');\t//асинхронно обращаемся к API\n\t\treturn res.results.map(this._transformStarship);\t//для каждого полученного объекта применяем трансформацию\n\t}\n\n\tgetStarship = async (id) => {\n\t\tconst starship = await this.getReource(`/starships/${id}`);\t//асинхронно обращаемся к API\n\n\t\treturn this._transformStarship(starship)\t//возвращаем полученный объект трансформированным\n\t}\n\n\tgetImageStarship = ({ id }) => {\n\t\treturn `${this._imageBase}starships/${id}.jpg`\n\t}\n\n}\n\nexport default SwapiService;","import React from 'react';\n\nconst DataPlanet = (props) => {\n\tconst { id, name, population, rotationPeriod, diameter } = props.planet;\n\n\treturn(\n\t\t<React.Fragment>\n\t\t\t<div className=\"col-4\">\n\t\t\t\t\t<img \n\t\t\t\t\tsrc={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\n\t\t\t\t\tclassName=\"img-planet\"\n\t\t\t\t\talt=\"planet\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col planet-props\">\n\t\t\t\t\t<h3>{name}</h3>\n\t\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t\t<li className=\"list-group-item planet-prop-item\">Население:\t{population}</li>\n\t\t\t\t\t\t<li className=\"list-group-item planet-prop-item\">Период вращения: {rotationPeriod}</li>\n\t\t\t\t\t\t<li className=\"list-group-item planet-prop-item\">Диаметр: {diameter}</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default DataPlanet;","import Spinner from './Spinner';\n\nexport default Spinner;","import React from 'react';\nimport './Spinner.css';\n\nconst Spinner = () => {\n\treturn(\n\t\t<div className=\"lds-css ng-scope\">\n\t\t\t<div className=\"lds-double-ring\">\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Spinner;","import ErrorIndicator from './ErrorIndicator';\n\nexport default ErrorIndicator;","import React from 'react';\n\nimport './ErrorIndicator.sass';\n\nconst ErrorIndicator = () => {\n\treturn(\n\t\t<div className=\"error-indicator\">\n\t\t\t<span className=\"boom\">БАХ!</span>\n\t\t\t<span>\n\t\t\t\tчто-то пошло не так...\n\t\t\t</span>\n\t\t\t<span>\n\t\t\t\tно мы уже выслали дроидов чтобы все исправить\n\t\t\t</span>\n\t\t</div>\n\t);\n};\n\nexport default ErrorIndicator;","import RandomPlanet from './RandomPlanet';\n\nexport default RandomPlanet;","import React from 'react';\n\nimport SwapiService from './../../services/swapi-service';\nimport DataPlanet from './DataPlanet';\nimport Spinner from './../Spinner';\nimport ErrorIndicator from './../ErrorIndicator';\nimport PropTypes from 'prop-types';\n\nimport './RandomPlanet.sass'\n\nclass RandomPlanet extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tplanet: {},\n\t\t\tloading: true,\n\t\t\terror: false,\n\t\t};\n\n\t\tthis.swapiService = new SwapiService();\n\n\t\tthis.onPlanetLoaded = (planet) => {\n\t\t\tthis.setState({ \n\t\t\t\t\t\tplanet,\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terror: false,\n\t\t\t\t\t});\n\t\t};\n\n\t\tthis.onError = (error) => {\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\terror: true,\n\t\t\t})\n\t\t};\n\n\t\tthis.updatePlanet = () => {\n\t\t\tconst id = Math.floor(Math.random()*25 + 3);\n\n\t\t\tthis.swapiService\n\t\t\t\t.getPlanet(id)\n\t\t\t\t.then(this.onPlanetLoaded)\n\t\t\t\t.catch(this.onError);\n\t\t};\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updatePlanet();\n\t\tthis.interval = setInterval(this.updatePlanet, 10000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\n\trender() {\n\n\t\tconst { planet, loading, error } = this.state;\n\n\t\tconst hasData = !( loading || error );\n\n\t\tconst errorMessage = error ? <ErrorIndicator /> : null;\n\t\tconst spinner = loading ? <Spinner /> : null;\n\t\tconst content = hasData ? <DataPlanet planet={planet} /> : null;\n\n\t\treturn(\n\t\t\t<div className=\"row mx-sm-4 slider d-flex justify-content-center\">\n\t\t\t\t{errorMessage}\n\t\t\t\t{spinner}\n\t\t\t\t{content}\n\t\t\t</div>\n\t);\n\t}\n\n};\n\nRandomPlanet.propTypes = {\n\tupdatePlanet: PropTypes.number\n};\n\nexport default RandomPlanet;","import Row from './Row';\n\nexport default Row;","import React from 'react';\n\nconst Row = ({left, right}) => {\n\treturn(\n\t\t<div className=\"container-fluid body-app d-flex justify-content-between\">\n\t\t\t{left}\n\t\t\t{right}\n\t\t</div>\n\t);\n}\n\nexport default Row;","import React from 'react';\n\nimport './ItemList.sass'\n\nconst ItemList = (props) => {\n\t\n\tconst { data, onItemClick, children: renderName } = props;\n\n\tconst items = data.map((item) => {\n\t\tconst { id } = item;\n\t\tconst label = renderName(item);\n\n\t\tlet activeItem = \"\";\n\t\tif (props.itemSelected === id) {\n\t\t\tactiveItem = \" active\";\n\t\t}\n\n\n\t\treturn(\n\t\t\t<li className={`list-group-item list-group-item-action${activeItem} person-item`}\n\t\t\t\t\tkey={id}\n\t\t\t\t\tonClick={() => onItemClick(id)}>\n\t\t\t\t{label}\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn(\n\t\t<div className=\"mx-sm-4 item-list\">\n\t\t\t{items}\n\t\t</div>\n\t);\n\n};\n\nItemList.defaultProps = {\n\tonItemClick: () => {}\n};\n\nexport default ItemList;","import ItemList from './ItemList';\n\nexport default ItemList;","import React from 'react';\n\nimport Spinner from './../Spinner';\nimport ErrorIndicator from './../ErrorIndicator';\n\nconst withData = (View) => {\n\treturn class extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\n\t\t\tthis.state = {\n\t\t\t\tdata: null,\n\t\t\t\tloading: true,\n\t\t\t\terrors: false,\n\t\t\t};\n\n\t\t\tthis.onError = (err) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloading: false,\n\t\t\t\t\terrors: true,\n\t\t\t\t});\n\t\t\t};\n\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.props.getData()\n\t\t\t\t.then((data) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terrors: false,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(this.onError);\n\t\t};\n\n\t\tcomponentDidCatch() {\n\t\t\tthis.setState({\n\t\t\t\terrors: true,\n\t\t\t});\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tthis.update();\n\t\t}\n\n\t\tcomponentDidUpdate(prevProps) {\n\t\t\tif (this.props.getData !== prevProps.getData) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}\n\n\t\trender() {\n\t\t\tconst { data, loading, errors } = this.state;\n\n\t\t\tif (errors) {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"mx-sm-4 item-list d-flex justify-content-center\">\n\t\t\t\t\t\t<ErrorIndicator />\t\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t};\n\n\t\t\tif (loading) {\n\t\t\t\treturn(\n\t\t\t\t\t<div className=\"mx-sm-4 item-list d-flex justify-content-center\">\n\t\t\t\t\t\t<Spinner />\t\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t};\n\n\t\t\treturn <View {...this.props} data={data} />;\n\t\t}\n\t};\n};\n\nexport default withData;","import React from 'react';\n\nconst { Provider: SwapiProvider, Consumer: SwapiConsumer } = React.createContext();\n\nexport { SwapiProvider, SwapiConsumer };","import React from 'react';\nimport { SwapiConsumer } from './../SwapiServiceContext';\n\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\n\treturn (props) => {\n\t\treturn(\n\t\t\t<SwapiConsumer>\n\t\t\t\t{ \n\t\t\t\t\t(swapi) => {\n\t\t\t\t\t\tconst serviceProps = mapMethodsToProps(swapi);\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Wrapped {...props} {...serviceProps} />\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</SwapiConsumer>\n\t\t);\n\t};\n};\n\nexport default withSwapiService;","import React from 'react';\n\nconst withChildFunction = (fn) => (Wrapped) => {\n\treturn (props) => {\n\t\treturn(\n\t\t\t<Wrapped {...props} >\n\t\t\t\t{ fn }\n\t\t\t</Wrapped>\n\t\t);\n\t};\n};\n\nexport default withChildFunction;","const compose = (...funcs) => (comp) => {\n\treturn funcs.reduceRight(\n\t\t\t(prevResult, f) => f(prevResult), comp);\n};\n\nexport default compose;","import React from 'react';\n\nimport ItemList from './../ItemList';\nimport { withData, withSwapiService, withChildFunction, compose } from './../HocHelpers';\n\nconst renderName = ({name}) => <span>{name}</span>;\nconst renderNameAndPassengers = ({name, passengers}) => <span>{`${name} (${passengers})`}</span>;\n\nconst mapPersonMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getAllPeople\n\t};\n};\n\nconst mapPlanetMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getAllPlanets\n\t};\n};\n\nconst mapStarshipMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getAllStarships\n\t};\n};\n\nconst PersonList = compose(\n\t\t\t\t\t\t\t\t\t\twithSwapiService(mapPersonMethodsToProps),\n\t\t\t\t\t\t\t\t\t\twithData,\n\t\t\t\t\t\t\t\t\t\twithChildFunction(renderName)\n\t\t\t\t\t\t\t\t\t)(ItemList);\n\nconst PlanetList = compose(\n\t\t\t\t\t\t\t\t\t\twithSwapiService(mapPlanetMethodsToProps),\n\t\t\t\t\t\t\t\t\t\twithData,\n\t\t\t\t\t\t\t\t\t\twithChildFunction(renderName)\n\t\t\t\t\t\t\t\t\t)(ItemList);\n\nconst StarshipList = compose(\n\t\t\t\t\t\t\t\t\t\twithSwapiService(mapStarshipMethodsToProps),\n\t\t\t\t\t\t\t\t\t\twithData,\n\t\t\t\t\t\t\t\t\t\twithChildFunction(renderNameAndPassengers)\n\t\t\t\t\t\t\t\t\t)(ItemList);\n\nexport {\n\tPersonList,\n\tPlanetList,\n\tStarshipList,\n};\n","import ErrorButton from './ErrorButton';\n\nexport default ErrorButton;","import React from 'react';\n\nimport './ErrorButton.sass';\n\nclass ErrorButton extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdataError: false,\n\t\t};\n\n\t\tthis.throwError = () => {\n\t\t\tthis.setState({\n\t\t\t\tdataError: true,\n\t\t\t})\n\t\t};\n\t}\n\n\trender() {\n\t\tif (this.state.dataError) {\n\t\t\tthis.foo.bar = 0;\n\t\t};\n\n\t\treturn(\n\t\t\t<button className=\"btn btn-danger btns-app\"\n\t\t\t\t\t\t\tonClick={this.throwError} >\n\t\t\t\t\t\tThrow Error\n\t\t\t</button>\n\t\t);\n\t}\n\n}\n\nexport default ErrorButton;","import ItemDetails from './ItemDetails';\n\nexport default ItemDetails;","import React from 'react';\nimport SwapiService from './../../services/swapi-service';\nimport Spinner from './../Spinner';\nimport ErrorIndicator from './../ErrorIndicator';\nimport ErrorButton from './../ErrorButton';\n\nimport './ItemDetails.sass';\n\nclass ItemDetails extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.swapi = new SwapiService();\n\n\t\tthis.state = {\n\t\t\titem: null,\n\t\t\timage: null,\n\t\t\tloading: true,\n\t\t\terrors: false,\n\t\t}\n\n\t\tthis.onError = (err) => {\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\terrors: true,\n\t\t\t})\n\t\t};\n\n\t\tthis.updateItem = () => {\n\t\t\tconst { itemId, getData, getImageUrl } = this.props;\n\n\t\t\tgetData(itemId)\n\t\t\t\t.then((item) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\titem: item,\n\t\t\t\t\t\timage: getImageUrl(item),\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\terrors: false,\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch(this.onError);\n\t\t};\n\t}\n\n\tcomponentDidCatch() {\n\t\tthis.setState({\n\t\t\terrors: true,\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateItem();\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif ((this.props.itemId !== prevProps.itemId) ||\n\t\t\t\t\t(this.props.getData !== prevProps.getData) ||\n\t\t\t\t\t\t(this.props.getImageUrl !== prevProps.getImageUrl)) {\n\t\t\tthis.setState({\n\t\t\t\tloading: true,\n\t\t\t})\n\t\t\tthis.updateItem();\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { item, loading, errors, image } = this.state;\n\n\t\tif (item === null) {\n\t\t\treturn(\n\t\t\t\t<span className=\"mr-4 person-details d-flex justify-content-center\">Select item</span>\n\t\t\t);\n\t\t}\n\n\t\tif (errors) {\n\t\t\treturn(\n\t\t\t\t<div className=\"mr-4 person-details d-flex justify-content-center\">\n\t\t\t\t\t<ErrorIndicator />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (loading) {\n\t\t\treturn(\n\t\t\t\t<div className=\"mr-4 person-details d-flex justify-content-center\">\n\t\t\t\t\t<Spinner />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn(\n\t\t\t<div className=\"mr-4 person-details\">\n\t\t\t\t<div className=\"row d-flex\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img \n\t\t\t\t\t\t\tsrc={image}\n\t\t\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\t\t\theight=\"150px\"\n\t\t\t\t\t\t\tclassName=\"im-person\"\n\t\t\t\t\t\t />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col person-data\">\n\t\t\t\t\t<h3>{item.name}</h3>\n\t\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tReact.Children.map(this.props.children, (child, index) => {\n\t\t\t\t\t\t\t\treturn React.cloneElement(child, { item });\t//создать копию элемента, добавив в копию свойство (props) item\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t\t<ErrorButton />\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\t\n};\n\nexport default ItemDetails;","import Record from './Record';\n\nexport default Record;","import React from 'react';\n\nimport \"./Record.sass\";\n\nconst Record = ({ item, field, label }) => {\n\treturn(\n\t\t<li className=\"list-group-item person-prop-item\">\n\t\t\t\t<span className=\"term\">{label}</span>\n\t\t\t\t<span>{ item[field] }</span>\n\t\t</li>\n\t);\n};\n\nexport default Record;","import React from 'react';\n\nimport ItemDetails from './../ItemDetails';\nimport Record from './../Record';\n\nimport { withSwapiService } from './../HocHelpers';\n\nconst PersonDetails = (props) => {\n\treturn(\n\t\t<ItemDetails {...props} >\n\t\t\t<Record field=\"gender\" label=\"Gender\" />\n\t\t\t<Record field=\"birthYear\" label=\"Birth Year\" />\n\t\t\t<Record field=\"eyeColor\" label=\"Eye Color\" />\n\t\t</ItemDetails>\t\t\t\n\t);\n};\n\nconst mapMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getPerson,\n\t\tgetImageUrl: swapi.getImagePerson,\n\t};\n};\n\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);","import React from 'react';\n\nimport ItemDetails from './../ItemDetails';\nimport Record from './../Record';\n\nimport { withSwapiService } from './../HocHelpers';\n\nconst PlanetDetails = (props) => {\n\treturn(\t\t\n\t\t<ItemDetails {...props} >\n\t\t\t<Record field=\"population\" label=\"Population\" />\n\t\t\t<Record field=\"rotationPeriod\" label=\"Rotation\" />\n\t\t\t<Record field=\"diameter\" label=\"Diameter\" />\n\t\t</ItemDetails>\n\t);\n};\n\nconst mapMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getPlanet,\n\t\tgetImageUrl: swapi.getImagePlanet,\n\t};\n};\n\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);","import React from 'react';\n\nimport ItemDetails from './../ItemDetails';\nimport Record from './../Record';\n\nimport { withSwapiService } from './../HocHelpers';\n\nconst StarshipDetails = (props) => {\n\treturn(\t\t\n\t\t<ItemDetails {...props} >\n\t\t\t<Record field=\"model\" label=\"Model\" />\n\t\t\t<Record field=\"length\" label=\"Length\" />\n\t\t\t<Record field=\"passengers\" label=\"Passengers\" />\n\t\t</ItemDetails>\n\t);\n};\n\nconst mapMethodsToProps = (swapi) => {\n\treturn {\n\t\tgetData: swapi.getStarship,\n\t\tgetImageUrl: swapi.getImageStarship,\n\t};\n};\n\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);","import React from 'react';\n\nimport Row from './../Row';\nimport { withRouter } from 'react-router-dom';\nimport { PersonList, PersonDetails } from './../SwComponents';\n\nconst PeoplePage = ({ history, match }) => {\n\tconst { id } = match.params;\n\n\treturn(\n\t\t<Row left={<PersonList onItemClick={ (id) => { history.push(id) } } />}\n\t\t\t right={<PersonDetails itemId={id} />} />\n\t);\n}\n\nexport default withRouter(PeoplePage);","import React from 'react';\n\nimport Row from './../Row';\nimport { PlanetList, PlanetDetails } from './../SwComponents';\n\nclass PlanetPage extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\titemSelected: 11,\n\t\t};\n\n\t\tthis.onItemClick = (id) => {\n\t\t\tthis.setState({\n\t\t\t\titemSelected: id,\n\t\t\t})\n\t\t};\n\n\t}\n\n\trender() {\n\t\tconst { itemSelected } = this.state;\n\n\t\treturn(\n\t\t\t<Row left={<PlanetList onItemClick={this.onItemClick} />}\n\t\t\t\t right={<PlanetDetails itemId={itemSelected} />} />\n\t\t);\n\t}\n\n}\n\nexport default PlanetPage;","import React from 'react';\n\nimport Row from './../Row';\nimport { StarshipList, StarshipDetails } from './../SwComponents';\nimport { withRouter } from 'react-router-dom';\n\n\nconst StarshipPage = ({ history, match }) => {\n\tconst { id } = match.params;\n\n\treturn(\n\t\t<Row left={<StarshipList onItemClick={ (id) => { history.push(id) } }/> }\n\t\t\t right={<StarshipDetails itemId={id} /> } />\n\n\t);\n}\n\nexport default withRouter(StarshipPage);","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\n\n\tif (isLoggedIn) {\n\t\treturn <Redirect to=\"/\" />;\n\t};\n\n\treturn(\n\t\t<div className=\"page-container\">\n\t\t\t<div className=\"main-page\">\n\t\t\t\t<p>Войдите для просмотра секретной страницы</p>\n\t\t\t\t<button className=\"btn btn-primary\"\n\t\t\t\t\t\tonClick={onLogin}>\n\t\t\t\t\tВойти\n\t\t\t\t</button>\n\t\t\t</div>\t\n\t\t</div>\n\t);\n\n};\n\nexport default LoginPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SecretPage = ({ isLoggedIn }) => {\n\n\tif (isLoggedIn) {\n\t\treturn(\n\t\t\t<div className=\"page-container\">\n\t\t\t\t<div className=\"main-page\">\n\t\t\t\t\t<h3>Эта страница полна секретов</h3>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn <Redirect to=\"/login\" />\n\n};\n\nexport default SecretPage;","import React from 'react';\n\nimport './Pages.sass';\n\nconst MainPage = () => {\n    return(\n        <div className=\"page-container\">\n            <div className=\"main-page\">\n                <h1>Добро пожаловать</h1>\n                <p>Вас приветствует приложение StarDB</p>\n                <p>Погрузитесь в незабываемый мир Star Wars</p>\n                <p>Приложение использует API https://swapi.dev/api и https://starwars-visualguide.com/assets/img/</p>\n                <p>Вы можете переходить по ссылкам в шапке сайта и читать про героев, планеты и корабли вселенной StarWars</p>\n            </div>\n        </div>\n    );\n}\n\nexport default MainPage;","class MocService {\n\n\t_people = [\n\n\t\t{\n\t\t\tid: '1',\n\t\t\tname: 'Bilbo Baggins [TEST DATA]',\n\t\t\tgender: 'male',\n\t\t\tbirthYear: 'long ago',\n\t\t\teyeColor: 'brown'\n\t\t},\n\n\t\t{\n\t\t\tid: '2',\n\t\t\tname: 'Frodo Baggins [TEST DATA]',\n\t\t\tgender: 'male',\n\t\t\tbirthYear: 'long ago',\n\t\t\teyeColor: 'dark brown'\n\t\t},\n\n\t];\t\n\n\t_planets = [\n\n\t\t{\n\t\t\tid: '1',\n\t\t\tname: 'Earth [TEST DATA]',\n\t\t\tpopulation: '7.530.000.000',\n\t\t\trotationPeriod: '23 hours 56 seconds',\n\t\t\tdiameter: '12.742 km',\n\t\t},\n\n\t\t{\n\t\t\tid: '2',\n\t\t\tname: 'Venus [TEST DATA]',\n\t\t\tpopulation: 'not known',\n\t\t\trotationPeriod: '243 days',\n\t\t\tdiameter: '12.104 km',\n\t\t},\n\n\t];\n\n\t_starships = [\n\n\t\t{\n\t\t\tid: '1',\n\t\t\tname: 'USS Enterprise [TEST DATA]',\n\t\t\tmodel: 'NCC-1701-C',\n\t\t\tmanufacturer: 'Northrop Grumman Shipbuilding',\n\t\t\tlength: '300 meters',\n\t\t\tpassengers: 50,\n\t\t},\n\n\t];\n\n\t_extractId(item) {\t\t\t\t\t\t\n\t\tconst idRegExp = /\\/([0-9]*)\\/$/;\t\n\n\t\treturn item.url.match(idRegExp)[1];\n\t}\n\n\t_transformPlanet = (planet) => {\t\t//принимаем объект planet и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(planet),\n\t\t\tname: planet.name,\n\t\t\tpopulation: planet.population,\n\t\t\trotationPeriod: planet.rotation_period,\n\t\t\tdiameter: planet.diameter,\n\t\t};\n\t}\n\n\t_transformStarship = (starship) => {\t//принимаем объект starship и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(starship),\n\t\t\tname: starship.name,\n\t\t\tmodel: starship.model,\n\t\t\tmanufacturer: starship.manufacturer,\n\t\t\tcostInCredits: starship.costInCredits,\n\t\t\tlength: starship.length,\n\t\t\tcrew: starship.crew,\n\t\t\tpassengers: starship.passengers,\n\t\t\tcargoCapacity: starship.cargoCapacity,\n\t\t};\n\t}\n\n\t_transformPerson = (person) => {\t//принимаем объект person и возвращаем объект с его состояниями\n\t\treturn {\n\t\t\tid: this._extractId(person),\n\t\t\tname: person.name,\n\t\t\tgender: person.gender,\n\t\t\tbirthYear: person.birth_year,\n\t\t\teyeColor: person.eye_color,\n\t\t};\n\t}\n\n\tgetAllPeople = async () => {\n\t\treturn this._people;\t//для каждого полученного объекта применяем трансформацию\n\t}\n\n\tgetPerson = async (id) => {\n\t\tconst person = await this._people[id];\n\t\t\n\t\treturn this._transformPerson(person);\n\t}\n\n\tgetImagePerson = (item) => {\n\t\treturn ('http://komotoz.ru/kartinki/images/kartinki_pro_lubov/kartinki_pro_lubov_17.jpg');\n\t}\n\n\tgetAllPlanets = async () => {\n\t\treturn this._planets;\n\t}\n\n\tgetPlanet = async (id) => {\n\t\treturn this._planets[0];\n\t}\n\n\tgetImagePlanet = ({ id }) => {\n\t\treturn 'http://mirpozitiva.ru/uploads/posts/2016-09/medium/1474011210_15.jpg'\n\t}\n\n\tgetAllStarships = async () => {\n\t\treturn this._starships;\n\t}\n\n\tgetStarship = async (id) => {\n\t\treturn this._starships[0];\n\t}\n\n\tgetImageStarship = ({ id }) => {\n\t\treturn 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRDQUI-hIG19m9mvFCiqU4f6rgfr3zVUqL4w-C9bCjA5a6gCwb_lw'\n\t}\n\n}\n\nexport default MocService;","import App from './App';\n\nexport default App;","import React from 'react';\n\nimport './App.sass';\n\nimport Header from './../components/Header';\nimport RandomPlanet from './../components/RandomPlanet';\nimport { PeoplePage, PlanetPage, StarshipPage, SecretPage, LoginPage, MainPage } from './../components/Pages';\nimport { SwapiProvider } from './../components/SwapiServiceContext';\nimport { SwapiService, MocService } from './../services';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tswapi: new SwapiService(),\n\t\t\tisLoggedIn: false,\n\t\t\tisTestedData: false\n\t\t};\n\n\t\tthis.onLogin = () => {\n\t\t\tthis.setState({\n\t\t\t\tisLoggedIn: true,\n\t\t\t});\n\t\t};\n\n\t\tthis.onChangeService = () => {\n\t\t\tthis.setState(({ swapi }) => {\n\t\t\t\tconst Service = swapi instanceof SwapiService ? MocService : SwapiService;\n\t\t\t\tconst isRandomWidgetView = this.state.isTestedData\n\n\t\t\t\treturn {\n\t\t\t\t\tswapi: new Service(),\n\t\t\t\t\tisTestedData: !isRandomWidgetView\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\n\t}\n\n\trender() {\n\t\tconst RandomWidget = () => { \n\t\t\tif (this.state.isTestedData) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn(\n\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t<RandomPlanet />\n\t\t\t\t</div>\n\t\t\t);\n\t\t};\n\n\t\treturn(\n\t\t\t<SwapiProvider value={ this.state.swapi } >\n\t\t\t\t<Router >\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"container-fluid\" >\n\t\t\t\t\t\t\t<Header onChangeService={this.onChangeService} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<RandomWidget />\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Route path=\"/\" exact component={MainPage} />\n\t\t\t\t\t\t<Route path=\"/people/:id?\" component={PeoplePage} />\n\t\t\t\t\t\t<Route path=\"/planets/\" component={PlanetPage} />\n\t\t\t\t\t\t<Route path=\"/starships/\" exact component={StarshipPage} />\n\t\t\t\t\t\t<Route path=\"/starships/:id\" component={StarshipPage} />\n\t\t\t\t\t\t<Route path=\"/login\"\n\t\t\t\t\t\t\t\t\t render={ () => \n\t\t\t\t\t\t\t\t\t \t<LoginPage isLoggedIn={this.state.isLoggedIn}\n\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t onLogin={ this.onLogin } />\n\t\t\t\t\t\t\t\t\t  } />\n\n\t\t\t\t\t\t<Route path=\"/secret\"\n\t\t\t\t\t\t\t\t\t render={ () => \n\t\t\t\t\t\t\t\t\t \t<SecretPage isLoggedIn={this.state.isLoggedIn} />\n\t\t\t\t\t\t\t\t\t  } />\n\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</SwapiProvider>\t\n\t\t);\n\t}\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}